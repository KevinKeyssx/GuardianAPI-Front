---
import Paginations      from "@/components/shared/Paginations.astro";
import Panel            from "@/components/shared/Panel.svelte";
import Table            from "@/components/shared/table/Table.astro";
import TableData        from "@/components/shared/table/TableData.astro";
import TableRow         from "@/components/shared/table/TableRow.astro";
import UserForm         from "@/components/dashboard/users/UserForm.svelte";
import Filter           from "@/components/inputs/Filter.astro";


const mockUsers = [
    { id: 1, email: 'john@example.com', name: 'John Doe',       nickname: 'johndoe',    avatar: 'https://res.cloudinary.com/dbgzsikcs/image/upload/v1744512902/kevinkeyssx/projects/efa91c84-239f-4c87-b052-d74822e2f529.avif', birthday: '2025-04-17', isActive: true,  isVerified: false,  phone: '+1234567890', role: 'Admin',       lastLogin: '2025-04-17T15:32:45Z' },
    { id: 2, email: 'jane@example.com', name: 'Jane Smith',     nickname: 'janesmith',  avatar: 'https://res.cloudinary.com/dbgzsikcs/image/upload/v1744512902/kevinkeyssx/projects/efa91c84-239f-4c87-b052-d74822e2f529.avif', birthday: '2025-04-16', isActive: false, isVerified: true,   phone: '+1234567890', role: 'Developer',   lastLogin: '2025-04-16T09:15:22Z' },
    { id: 3, email: 'alex@example.com', name: 'Alex Johnson',   nickname: 'alexj',      avatar: 'https://res.cloudinary.com/dbgzsikcs/image/upload/v1744512902/kevinkeyssx/projects/efa91c84-239f-4c87-b052-d74822e2f529.avif', birthday: '2025-04-15', isActive: true,  isVerified: true,   phone: '+1234567890', role: 'User',        lastLogin: '2025-04-15T18:45:10Z' },
];

const columns = [
    'Avatar',
    'Email',
    'Name',
    'Nickname',
    'Birthday',
    'Phone',
    'Active',
    'Verified',
    'Role',
    'Last Login',
    'Actions'
];

let clicked = 0;
---

<div class="animate-fade-in">
    <h1 class="text-2xl font-orbitron text-white mb-6">Users</h1>

    <div class="flex justify-between items-center mb-4 gap-2 sm:gap-4">
        <Filter />

        <Panel client:only="svelte"
            id                  = "add-user"
            title               = "Add User"
            saveButtonText      = "Add"
            buttonText          = "Add User"
            buttonClass         = "fixed sm:static sm:flex bottom-16 sm:bottom-auto right-4 sm:right-auto bg-neon-blue text-dark-blue rounded-full sm:rounded-lg px-2.5 sm:px-4 sm:py-2 hover:bg-opacity-80 transition-colors duration-300 sm:items-center "
            bind:clicked={ clicked }
        >
            <UserForm
                id="add-user"
                client:only="svelte"
                bind:clicked={ clicked }
            />
        </Panel>
    </div>

    <Table {columns}>
        {mockUsers.map(user => (
            <TableRow>
                <TableData value={user.avatar} />
                <TableData value={user.email} />
                <TableData value={user.name} />
                <TableData value={user.nickname} />
                <TableData value={user.birthday} />
                <TableData value={user.phone} />
                <TableData value={user.isActive} />
                <TableData value={user.isVerified} />
                <TableData>
                    <span class={`px-2 py-1 text-xs rounded-full ${user.role === 'Admin' ? 'bg-red-900/30 text-red-300' : user.role === 'Developer' ? 'bg-blue-900/30 text-blue-300' : 'bg-green-900/30 text-green-300'}`}>
                        {user.role}
                    </span>
                </TableData>
                <TableData value={user.lastLogin} />
                <TableData size="text-sm font-medium" float={ true }>
                    <Panel client:only="svelte"
                        id              = { `edit-user-${user.id}` }
                        title           = "Edit User"
                        saveButtonText  = "Edit"
                        buttonText      = ""
                        buttonClass     = ""
                        isEdit          = { true }
                    >
                        <UserForm
                            id={`edit-user-${user.id}`}
                            client:only="svelte"
                        />
                    </Panel>
                </TableData>
            </TableRow>
        ))}
    </Table>

    <!-- Pagination -->
    <Paginations totalItems={mockUsers.length} itemsPerPage={5} currentPage={1} />
</div>