---
import Paginations      from "@/components/shared/Paginations.astro";
import Table            from "@/components/shared/table/Table.astro";
import TableData        from "@/components/shared/table/TableData.astro";
import TableRow         from "@/components/shared/table/TableRow.astro";
import Panel            from "@/components/shared/Panel.svelte";
import AttributeForm    from "./AttributeForm.svelte";
import OpenForm         from "./OpenForm.svelte";

const mockAttributes = [
    { id: 1, key: 'phone_number', value: '1234567890', type: 'string', required: false, min: '-', max: 100, minLenght: 0, maxLenght: 20, minDate: '-', maxDate: '-', patten: '-', active: true },
    { id: 2, key: 'address',      value: '1234567890', type: 'object', required: false, min: '-', max: 100, minLenght: 0, maxLenght: 20, minDate: '-', maxDate: '-', patten: '-', active: true },
    { id: 3, key: 'preferences',  value: '1234567890', type: 'object', required: false, min: 150   , max: 100, minLenght: 0, maxLenght: 20, minDate: '-', maxDate: '-', patten: '-', active: true },
];


const columns = [
    'Key',
    'Value',
    'Type',
    'Required',
    'Min',
    'Max',
    'Min Length',
    'Max Length',
    'Min Date',
    'Max Date',
    'Pattern',
    'Active',
    'Actions'
];
---

<div class="animate-fade-in">
    <h1 class="text-2xl font-orbitron text-white mb-6">User Attributes</h1>

    <div class="flex justify-between items-center mb-4">
        <div class="relative w-64">
            <input
                type            = "text"
                placeholder     = "Search attributes..."
                class           = "search-input w-full bg-dark-blue/30 border border-neon-blue/30 rounded-md py-2 pl-10 pr-4 text-white placeholder-gray-400 focus:outline-none focus:border-neon-blue/60"
                data-section    = "attributes"
            />

            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>
            </div>
        </div>

        <OpenForm client:only="svelte" />
    </div>

    <Table {columns}>
        {mockAttributes.map((attr, index) => (
            <TableRow>
                <TableData>{attr.key}</TableData>
                <TableData>{attr.value}</TableData>
                <TableData>
                    <span class={`px-2 py-1 text-xs rounded-full ${attr.type === 'string' ? 'bg-green-900/30 text-green-300' : attr.type === 'object' ? 'bg-blue-900/30 text-blue-300' : 'bg-purple-900/30 text-purple-300'}`}>
                        {attr.type}
                    </span>
                </TableData>
                <TableData>{attr.required ? 'Yes' : 'No'}</TableData>
                <TableData>{attr.min}</TableData>
                <TableData>{attr.max}</TableData>
                <TableData>{attr.minLenght}</TableData>
                <TableData>{attr.maxLenght}</TableData>
                <TableData>{attr.minDate}</TableData>
                <TableData>{attr.maxDate}</TableData>
                <TableData>{attr.patten}</TableData>
                <TableData>{attr.active ? 'Yes' : 'No'}</TableData>
                <TableData size="text-sm font-medium" float={true}>
                    <Panel
                        id              = { `edit-attribute-${ index }` }
                        title           = "Edit Attribute"
                        saveButtonText  = "Save"
                        buttonText      = ""
                        buttonClass     = ""
                        isEdit          = { true }
                        client:only     = "svelte"
                    >
                        <AttributeForm id={`edit-attribute-${index}`} attribute={attr} client:only="svelte"/>
                    </Panel>
                </TableData>
            </TableRow>
        ))}
    </Table>

    <!-- Pagination -->
    <Paginations totalItems={mockAttributes.length} itemsPerPage={5} currentPage={1} />
</div>