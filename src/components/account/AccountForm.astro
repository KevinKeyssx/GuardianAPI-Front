---
export interface Props {
    user: {
        id: string;
        name: string;
        email: string;
        avatar: string;
        birthdate: string;
        isActive: boolean;
        nickname: string;
        phone: string;
        planId: string;
        isVerified: boolean;
    };
}

const { user } = Astro.props;

const plans = [
    { id: 'free', name: 'Free' },
    { id: 'basic', name: 'Basic' },
    { id: 'premium', name: 'Premium' },
    { id: 'enterprise', name: 'Enterprise' }
];
---

<div class="space-y-6">
    <div class="flex flex-col items-center mb-6">
        <div class="relative w-24 h-24 rounded-full overflow-hidden border-2 border-neon-blue/50 mb-4 group">
            <img 
                src={user.avatar} 
                alt={user.name} 
                class="w-full h-full object-cover"
            />
            
            <div class="absolute inset-0 bg-dark-blue/70 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex flex-col items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-neon-blue mb-1" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd" />
                </svg>
                <span class="text-xs text-white">Cambiar</span>
            </div>
        </div>
        
        <label for="avatar-upload" class="cursor-pointer text-sm text-neon-blue hover:text-neon-blue/80 transition-colors duration-300">
            Subir nueva imagen
        </label>
        <input id="avatar-upload" type="file" accept="image/*" class="hidden" />
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div class="flex flex-col">
            <label for="name" class="text-sm font-orbitron text-white mb-1">Nombre</label>
            <input
                type="text"
                name="name"
                id="name"
                value={user.name}
                class="w-full px-4 py-2 bg-space-blue border border-neon-blue/30 rounded-lg focus:border-neon-blue focus:outline-none text-white"
                required
            />
        </div>
        
        <div class="flex flex-col">
            <label for="nickname" class="text-sm font-orbitron text-white mb-1">Nickname</label>
            <input
                type="text"
                name="nickname"
                id="nickname"
                value={user.nickname}
                class="w-full px-4 py-2 bg-space-blue border border-neon-blue/30 rounded-lg focus:border-neon-blue focus:outline-none text-white"
                required
            />
        </div>
    </div>
    
    <div class="flex flex-col">
        <label for="email" class="text-sm font-orbitron text-white mb-1">Email</label>
        <input
            type="email"
            name="email"
            id="email"
            value={user.email}
            class="w-full px-4 py-2 bg-space-blue border border-neon-blue/30 rounded-lg focus:border-neon-blue focus:outline-none text-white"
            required
        />
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div class="flex flex-col">
            <label for="phone" class="text-sm font-orbitron text-white mb-1">Teléfono</label>
            <input
                type="tel"
                name="phone"
                id="phone"
                value={user.phone}
                class="w-full px-4 py-2 bg-space-blue border border-neon-blue/30 rounded-lg focus:border-neon-blue focus:outline-none text-white"
            />
        </div>
        
        <div class="flex flex-col">
            <label for="birthdate" class="text-sm font-orbitron text-white mb-1">Fecha de nacimiento</label>
            <input
                type="date"
                name="birthdate"
                id="birthdate"
                value={user.birthdate}
                class="w-full px-4 py-2 bg-space-blue border border-neon-blue/30 rounded-lg focus:border-neon-blue focus:outline-none text-white"
            />
        </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div class="flex flex-col">
            <label for="plan" class="text-sm font-orbitron text-white mb-1">Plan</label>
            <div class="relative">
                <select 
                    id="plan" 
                    name="planId"
                    class="w-full px-4 py-2 bg-space-blue border border-neon-blue/30 rounded-lg focus:border-neon-blue focus:outline-none text-white appearance-none"
                >
                    {plans.map(plan => (
                        <option value={plan.id} selected={plan.id === user.planId}>{plan.name}</option>
                    ))}
                </select>
                <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                    <svg class="w-4 h-4 text-neon-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </div>
            </div>
        </div>
        
        <div class="flex flex-col">
            <label class="text-sm font-orbitron text-white mb-3">Estado</label>
            <div class="flex items-center space-x-6">
                <label class="inline-flex items-center">
                    <input 
                        type="checkbox" 
                        name="isActive" 
                        checked={user.isActive}
                        class="form-checkbox h-5 w-5 text-neon-blue rounded border-neon-blue/30 bg-space-blue focus:ring-0 focus:ring-offset-0"
                    />
                    <span class="ml-2 text-white">Activo</span>
                </label>
                
                <label class="inline-flex items-center">
                    <input 
                        type="checkbox" 
                        name="isVerified" 
                        checked={user.isVerified}
                        class="form-checkbox h-5 w-5 text-neon-blue rounded border-neon-blue/30 bg-space-blue focus:ring-0 focus:ring-offset-0"
                    />
                    <span class="ml-2 text-white">Verificado</span>
                </label>
            </div>
        </div>
    </div>
</div>

<script>
    // Animación para los campos del formulario
    document.addEventListener('astro:page-load', () => {
        const inputs = document.querySelectorAll('input, select');
        
        inputs.forEach((input, index) => {
            input.addEventListener('focus', () => {
                input.classList.add('border-neon-blue');
                input.classList.add('shadow-glow');
            });
            
            input.addEventListener('blur', () => {
                input.classList.remove('border-neon-blue');
                input.classList.remove('shadow-glow');
            });
        });
    });
</script>

<style>
    /* Estilo para los checkboxes */
    .form-checkbox {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        width: 1.25rem;
        height: 1.25rem;
        border: 2px solid rgba(0, 196, 214, 0.3);
        border-radius: 0.25rem;
        background-color: #010316;
        cursor: pointer;
        display: inline-block;
        position: relative;
        vertical-align: middle;
    }

    .form-checkbox:checked {
        background-color: #00c4d6;
        border-color: #00c4d6;
    }

    .form-checkbox:checked::after {
        content: '';
        position: absolute;
        left: 6px;
        top: 2px;
        width: 6px;
        height: 12px;
        border: solid white;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
    }
    
    /* Estilo para los inputs de fecha */
    input[type="date"]::-webkit-calendar-picker-indicator {
        filter: invert(1) brightness(0.8) sepia(100%) saturate(1000%) hue-rotate(170deg);
        cursor: pointer;
    }
    
    /* Efecto de brillo al enfocar */
    .shadow-glow {
        box-shadow: 0 0 10px rgba(0, 196, 214, 0.5);
    }
    
    /* Animación para los inputs */
    input, select {
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }
</style>
